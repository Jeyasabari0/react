{"ast":null,"code":"var _jsxFileName = \"/home/decoders/Desktop/react/my-app/src/components/BasicTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { usetable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLOUMNS } from './Coloumns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BasicTable() {\n  _s();\n  const coloumns = useMemo(() => COLOUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = usetable({\n    coloumns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRows\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroups => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroups.getHeaderGroupProps(),\n        children: headerGroups.headers.map(coloumn => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...coloumn.getheaderProps(),\n          children: coloumn.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n}\n_s(BasicTable, \"4QInKNSnkFjo/AIRNKj6HGCdnWw=\");\n_c = BasicTable;\nexport default BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","usetable","MOCK_DATA","COLOUMNS","jsxDEV","_jsxDEV","BasicTable","_s","coloumns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRows","children","map","getHeaderGroupProps","headers","coloumn","getheaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/decoders/Desktop/react/my-app/src/components/BasicTable.js"],"sourcesContent":["import React,{useMemo} from 'react'\nimport {usetable} from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLOUMNS } from './Coloumns'\n\nfunction BasicTable() {\n\n    const coloumns=useMemo(()=>COLOUMNS,[])\n    const data=useMemo(()=>MOCK_DATA,[])\n\n   const tableInstance =usetable({\n        coloumns,\n        data\n    })\n\n    const{\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRows,\n    }=tableInstance\n\n  return (\n   <table{...getTableProps}>\n     <thead>\n         {headerGroups.map((headerGroups)=>(\n            <tr {...headerGroups.getHeaderGroupProps()}>\n                {headerGroups.headers.map((coloumn)=>(\n                    <th {...coloumn.getheaderProps()}>{coloumn.render('Header')}</th> \n                ))}\n           </tr>\n         ))}\n     </thead>\n     <tbody{...getTableBodyProps}>\n         <tr>\n            <td></td>\n         </tr>\n     </tbody>\n   </table>\n  )\n}\n\nexport default BasicTable\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,OAAO,QAAO,OAAO;AACnC,SAAQC,QAAQ,QAAO,aAAa;AACpC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,QAAQ,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAACR,OAAO,CAAC,MAAIG,QAAQ,EAAC,EAAE,CAAC;EACvC,MAAMM,IAAI,GAACT,OAAO,CAAC,MAAIE,SAAS,EAAC,EAAE,CAAC;EAErC,MAAMQ,aAAa,GAAET,QAAQ,CAAC;IACzBO,QAAQ;IACRC;EACJ,CAAC,CAAC;EAEF,MAAK;IACDE,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACJ,CAAC,GAACL,aAAa;EAEjB,oBACCL,OAAA;IAAA,GAAUM,aAAa;IAAAK,QAAA,gBACrBX,OAAA;MAAAW,QAAA,EACKH,YAAY,CAACI,GAAG,CAAEJ,YAAY,iBAC5BR,OAAA;QAAA,GAAQQ,YAAY,CAACK,mBAAmB,CAAC,CAAC;QAAAF,QAAA,EACrCH,YAAY,CAACM,OAAO,CAACF,GAAG,CAAEG,OAAO,iBAC9Bf,OAAA;UAAA,GAAQe,OAAO,CAACC,cAAc,CAAC,CAAC;UAAAL,QAAA,EAAGI,OAAO,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACnE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACRrB,OAAA;MAAA,GAAUO,iBAAiB;MAAAI,QAAA,eACvBX,OAAA;QAAAW,QAAA,eACGX,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX;AAACnB,EAAA,CApCQD,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAsCnB,eAAeA,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}